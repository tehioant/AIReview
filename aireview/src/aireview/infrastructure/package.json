[
  {
    "sha": "dc876dbf78e0f25eb399545775a76ba4975c16bb",
    "filename": "aireview/src/aireview/application/controllers/review_controller.py",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/tehioant/AIReview/blob/f46b816064d17fdd0557f53a626ce48cdafe65b0/aireview%2Fsrc%2Faireview%2Fapplication%2Fcontrollers%2Freview_controller.py",
    "raw_url": "https://github.com/tehioant/AIReview/raw/f46b816064d17fdd0557f53a626ce48cdafe65b0/aireview%2Fsrc%2Faireview%2Fapplication%2Fcontrollers%2Freview_controller.py",
    "contents_url": "https://api.github.com/repos/tehioant/AIReview/contents/aireview%2Fsrc%2Faireview%2Fapplication%2Fcontrollers%2Freview_controller.py?ref=f46b816064d17fdd0557f53a626ce48cdafe65b0",
    "patch": "@@ -16,4 +16,4 @@ def __init__(\n     async def review_pull_request(self, pr_id: int) -> None:\n         pull_request = await self._github.get_pull_request(pr_id)\n         review = self._analyzer.analyze_code(pull_request)\n-        # await self._github.submit_review(pr_id, review)\n\\ No newline at end of file\n+        await self._github.submit_review(pr_id, review)\n\\ No newline at end of file"
  },
  {
    "sha": "86f33daffb8b37171964df2994a8245ce13b5fe4",
    "filename": "aireview/src/aireview/domain/entities/review_comment.py",
    "status": "modified",
    "additions": 12,
    "deletions": 1,
    "changes": 13,
    "blob_url": "https://github.com/tehioant/AIReview/blob/f46b816064d17fdd0557f53a626ce48cdafe65b0/aireview%2Fsrc%2Faireview%2Fdomain%2Fentities%2Freview_comment.py",
    "raw_url": "https://github.com/tehioant/AIReview/raw/f46b816064d17fdd0557f53a626ce48cdafe65b0/aireview%2Fsrc%2Faireview%2Fdomain%2Fentities%2Freview_comment.py",
    "contents_url": "https://api.github.com/repos/tehioant/AIReview/contents/aireview%2Fsrc%2Faireview%2Fdomain%2Fentities%2Freview_comment.py?ref=f46b816064d17fdd0557f53a626ce48cdafe65b0",
    "patch": "@@ -1,8 +1,19 @@\n from dataclasses import dataclass\n+from typing import Any\n+\n \n @dataclass\n class ReviewComment:\n     file_path: str\n     line: int\n     content: str\n-    type: str  # \"naming\", \"style\", \"indentation\", \"documentation\", \"test_coverage\"\n\\ No newline at end of file\n+    type: str  # \"naming\", \"style\", \"indentation\", \"documentation\", \"test_coverage\"\n+\n+    @staticmethod\n+    def from_json(data: Any) -> \"ReviewComment\":\n+        return ReviewComment(\n+            file_path=data.get("
    file_path
    ", "
    "),\n+            line=data.get("
    line
    ", 0),\n+            content=data.get("
    content
    ", "
    "),\n+            type=data.get("
    type
    ", "
    ")\n+        )\n\\ No newline at end of file"
  },
  {
    "sha": "622fad4bd3212511f0b698075ed038959043201b",
    "filename": "aireview/src/aireview/domain/services/code_analyzer.py",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/tehioant/AIReview/blob/f46b816064d17fdd0557f53a626ce48cdafe65b0/aireview%2Fsrc%2Faireview%2Fdomain%2Fservices%2Fcode_analyzer.py",
    "raw_url": "https://github.com/tehioant/AIReview/raw/f46b816064d17fdd0557f53a626ce48cdafe65b0/aireview%2Fsrc%2Faireview%2Fdomain%2Fservices%2Fcode_analyzer.py",
    "contents_url": "https://api.github.com/repos/tehioant/AIReview/contents/aireview%2Fsrc%2Faireview%2Fdomain%2Fservices%2Fcode_analyzer.py?ref=f46b816064d17fdd0557f53a626ce48cdafe65b0",
    "patch": "@@ -16,7 +16,9 @@ def analyze_code(self, pull_request: PullRequest) -> Review:\n         # self._ai_agent.initialize(f"
    Creating
    context
    for
    review
    of
    pull
    request
  {
    pull_request.number
  }
  ")\n         for index, file in enumerate(pull_request.files):\n             prompt = self._build_analysis_prompt(file)\n+            print(f"
  prompt
  :
  {
    prompt
  }
  ")\n             analysis = self._ai_agent.analyse(prompt)\n+            print(f"
  analysis
  :
  {
    analysis
  }
  ")\n             review_comments.append(self._parse_analysis(analysis))\n         return Review(1, review_comments,"
  summary
  of
  review
  ", "
  COMMENT
  ")\n \n@@ -30,5 +32,4 @@ def _build_analysis_prompt(self, file: PullRequestFile):\n \n \n     def _parse_analysis(self, analysis):\n-        print(f"
  analysis
  :
  {
    analysis
  }
  ")\n-        return ReviewComment("
  aireview/src/aireview/infrastructure/github_client.py
  ", 34, "
  get_pull_request
  ", "
  naming
  ")\n\\ No newline at end of file\n+        return ReviewComment.from_json(analysis)\n\\ No newline at end of file"
  },
  {
    "sha": "6ab48449cee0fc65c1362cbf76d54faab9d1c4f2",
    "filename": "aireview/src/aireview/infrastructure/github_client.py",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/tehioant/AIReview/blob/f46b816064d17fdd0557f53a626ce48cdafe65b0/aireview%2Fsrc%2Faireview%2Finfrastructure%2Fgithub_client.py",
    "raw_url": "https://github.com/tehioant/AIReview/raw/f46b816064d17fdd0557f53a626ce48cdafe65b0/aireview%2Fsrc%2Faireview%2Finfrastructure%2Fgithub_client.py",
    "contents_url": "https://api.github.com/repos/tehioant/AIReview/contents/aireview%2Fsrc%2Faireview%2Finfrastructure%2Fgithub_client.py?ref=f46b816064d17fdd0557f53a626ce48cdafe65b0",
    "patch": "@@ -59,7 +59,7 @@ async def submit_review(\n             for comment in review.comments:\n                 review_data = {\n                     "
    body
    ": f"
    **
  {
    comment.type
  }
  **
  :
  {
    comment.content
  }
  ",\n-                    "
  commit_id
  ": \"0bc1452063f61711e9bda6b4a1f49410bc621c7b\",\n+                    "
  commit_id
  ": \"\",\n                     "
  path
  ": comment.file_path,\n                     "
  start_line
  ": comment.line,\n                     "
  start_side
  ": \"RIGHT\","
  }
]


{
  "name": "review_controller.py",
  "path": "aireview/src/aireview/application/controllers/review_controller.py",
  "sha": "b2594bce448e54e05750df5c9e2f2422047170bc",
  "size": 631,
  "url": "https://api.github.com/repos/tehioant/AIReview/contents/aireview/src/aireview/application/controllers/review_controller.py?ref=main",
  "html_url": "https://github.com/tehioant/AIReview/blob/main/aireview/src/aireview/application/controllers/review_controller.py",
  "git_url": "https://api.github.com/repos/tehioant/AIReview/git/blobs/b2594bce448e54e05750df5c9e2f2422047170bc",
  "download_url": "https://raw.githubusercontent.com/tehioant/AIReview/main/aireview/src/aireview/application/controllers/review_controller.py",
  "type": "file",
  "content": "ZnJvbSBncmFwaHFsIGltcG9ydCBwcmludF9zY2hlbWEKCmZyb20gYWlyZXZp\nZXcuZG9tYWluLnNlcnZpY2VzLmNvZGVfYW5hbHl6ZXIgaW1wb3J0IENvZGVB\nbmFseXplcgpmcm9tIGFpcmV2aWV3LmluZnJhc3RydWN0dXJlLmdpdGh1Yl9j\nbGllbnQgaW1wb3J0IEdpdEh1YkNsaWVudAoKCmNsYXNzIFJldmlld0NvbnRy\nb2xsZXI6CiAgICBkZWYgX19pbml0X18oCiAgICAgICAgICAgIHNlbGYsCiAg\nICAgICAgICAgIGNvZGVfYW5hbHl6ZXI6IENvZGVBbmFseXplciwKICAgICAg\nICAgICAgZ2l0aHViX2NsaWVudDogR2l0SHViQ2xpZW50CiAgICApOgogICAg\nICAgIHNlbGYuX2FuYWx5emVyID0gY29kZV9hbmFseXplcgogICAgICAgIHNl\nbGYuX2dpdGh1YiA9IGdpdGh1Yl9jbGllbnQKCiAgICBhc3luYyBkZWYgcmV2\naWV3X3B1bGxfcmVxdWVzdChzZWxmLCBwcl9pZDogaW50KSAtPiBOb25lOgog\nICAgICAgIHB1bGxfcmVxdWVzdCA9IGF3YWl0IHNlbGYuX2dpdGh1Yi5nZXRf\ncHVsbF9yZXF1ZXN0KHByX2lkKQogICAgICAgIHJldmlldyA9IHNlbGYuX2Fu\nYWx5emVyLmFuYWx5emVfY29kZShwdWxsX3JlcXVlc3QpCiAgICAgICAgIyBh\nd2FpdCBzZWxmLl9naXRodWIuc3VibWl0X3Jldmlldyhwcl9pZCwgcmV2aWV3\nKQ==\n",
  "encoding": "base64",
  "_links": {
    "self": "https://api.github.com/repos/tehioant/AIReview/contents/aireview/src/aireview/application/controllers/review_controller.py?ref=main",
    "git": "https://api.github.com/repos/tehioant/AIReview/git/blobs/b2594bce448e54e05750df5c9e2f2422047170bc",
    "html": "https://github.com/tehioant/AIReview/blob/main/aireview/src/aireview/application/controllers/review_controller.py"
  }
}
